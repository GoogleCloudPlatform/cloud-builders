steps:
# Run tests.
- name: 'gcr.io/cloud-builders/bazel'
  args: ['test', '--spawn_strategy=standalone', '//pkg/...']

# Build the images into the local Docker daemon.
- name: 'gcr.io/cloud-builders/bazel'
  args: ['run', '--spawn_strategy=standalone', '//cmd/gcs-fetcher:image', '--', '--norun']
- name: 'gcr.io/cloud-builders/bazel'
  args: ['run', '--spawn_strategy=standalone', '//cmd/gcs-uploader:image', '--', '--norun']

# Tag the images to the correct location.
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'bazel/cmd/gcs-fetcher:image', 'gcr.io/$PROJECT_ID/gcs-fetcher']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'bazel/cmd/gcs-uploader:image', 'gcr.io/$PROJECT_ID/gcs-uploader']

# Sanity check that the images can be run.
- name: 'gcr.io/$PROJECT_ID/gcs-fetcher'
  args: ['--help']
- name: 'gcr.io/$PROJECT_ID/gcs-uploader'
  args: ['--help']

# Test the manifest uploader with a defined manifest location.
- name: 'gcr.io/$PROJECT_ID/gcs-uploader'
  args:
  - '--location=gs://${PROJECT_ID}_cloudbuild/manifest-${BUILD_ID}.json'
# Fetch the manifest.
- name: 'gcr.io/$PROJECT_ID/gcs-fetcher'
  args:
  - '--type=Manifest'
  - '--location=gs://${PROJECT_ID}_cloudbuild/manifest-${BUILD_ID}.json'
  - '--dest_dir=fetched'
# Check that files were downloaded.
- name: 'ubuntu'
  args: ['cat', 'fetched/cloudbuild.yaml']

# Push the images.
images:
- 'gcr.io/$PROJECT_ID/gcs-fetcher'
- 'gcr.io/$PROJECT_ID/gcs-uploader'

timeout: '2100s'
